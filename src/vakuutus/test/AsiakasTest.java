package vakuutus.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import vakuutus.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.04.27 13:55:22 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class AsiakasTest {



  // Generated by ComTest BEGIN
  /** testRekisteroi75 */
  @Test
  public void testRekisteroi75() {    // Asiakas: 75
    Asiakas marko1 = new Asiakas(); 
    assertEquals("From: Asiakas line: 77", 0, marko1.getTunnusNro()); 
    marko1.rekisteroi(); 
    Asiakas marko2 = new Asiakas(); 
    marko2.rekisteroi(); 
    int n1 = marko2.getTunnusNro(); 
    int n2 = marko2.getTunnusNro(); 
    assertEquals("From: Asiakas line: 84", n2, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString129 */
  @Test
  public void testToString129() {    // Asiakas: 129
    Asiakas asiakas = new Asiakas(); 
    asiakas.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 132", true, asiakas.toString().startsWith("3|Ankka Aku|030201-111C|")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse165 */
  @Test
  public void testParse165() {    // Asiakas: 165
    Asiakas jasen = new Asiakas(); 
    jasen.parse("   3  |  Ankka Aku   | 030201-111C"); 
    assertEquals("From: Asiakas line: 168", 3, jasen.getTunnusNro()); 
    assertEquals("From: Asiakas line: 169", true, jasen.toString().startsWith("3|Ankka Aku|030201-111C|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    jasen.rekisteroi(); 
    int n = jasen.getTunnusNro(); 
    jasen.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    jasen.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Asiakas line: 175", n+20+1, jasen.getTunnusNro()); 
  } // Generated by ComTest END
}