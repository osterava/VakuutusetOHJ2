package vakuutus.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import vakuutus.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.03.06 19:08:01 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class VakuutusTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa41 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa41() throws SailoException {    // Vakuutus: 41
    Vakuutus vakuutus = new Vakuutus(); 
    Asiakas marko1 = new Asiakas(), marko2 = new Asiakas(); 
    marko1.rekisteroi(); marko2.rekisteroi(); 
    assertEquals("From: Vakuutus line: 46", 0, vakuutus.getAsiakkaat()); 
    vakuutus.lisaa(marko1); assertEquals("From: Vakuutus line: 47", 1, vakuutus.getAsiakkaat()); 
    vakuutus.lisaa(marko2); assertEquals("From: Vakuutus line: 48", 2, vakuutus.getAsiakkaat()); 
    vakuutus.lisaa(marko1); assertEquals("From: Vakuutus line: 49", 3, vakuutus.getAsiakkaat()); 
    assertEquals("From: Vakuutus line: 50", 3, vakuutus.getAsiakkaat()); 
    assertEquals("From: Vakuutus line: 51", marko1, vakuutus.annaAsiakas(0)); 
    assertEquals("From: Vakuutus line: 52", marko2, vakuutus.annaAsiakas(1)); 
    assertEquals("From: Vakuutus line: 53", marko1, vakuutus.annaAsiakas(2)); 
    try {
    assertEquals("From: Vakuutus line: 54", marko1, vakuutus.annaAsiakas(3)); 
    fail("Vakuutus: 54 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    vakuutus.lisaa(marko1); assertEquals("From: Vakuutus line: 55", 4, vakuutus.getAsiakkaat()); 
    vakuutus.lisaa(marko1); assertEquals("From: Vakuutus line: 56", 5, vakuutus.getAsiakkaat()); 
    try {
    vakuutus.lisaa(marko1); 
    fail("Vakuutus: 57 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa67 */
  @Test
  public void testLisaa67() {    // Vakuutus: 67
    Vakuutus vak = new Vakuutus(); 
    Asiakas as1 = new Asiakas(),as2 = new Asiakas(),as3 = new Asiakas(); 
    as1.rekisteroi(); as2.rekisteroi(); as3.rekisteroi(); 
    int id1 = as1.getTunnusNro(); int id2 = as2.getTunnusNro(); 
    Kotivakuutus koti21 = new Kotivakuutus(id1); vak.lisaa(koti21); 
    Kotivakuutus koti11 = new Kotivakuutus(id1); vak.lisaa(koti11); 
    Kotivakuutus koti22 = new Kotivakuutus(id2); vak.lisaa(koti22); 
    Kotivakuutus koti12 = new Kotivakuutus(id2); vak.lisaa(koti12); 
    Kotivakuutus koti23 = new Kotivakuutus(id2); vak.lisaa(koti23); 
    List<Kotivakuutus> loydetyt; 
    loydetyt = vak.annaKotivakuutus(as3); 
    assertEquals("From: Vakuutus line: 85", 0, loydetyt.size()); 
    loydetyt = vak.annaKotivakuutus(as1); 
    assertEquals("From: Vakuutus line: 87", 2, loydetyt.size()); 
    assertEquals("From: Vakuutus line: 88", true, loydetyt.get(0) == koti11); 
    assertEquals("From: Vakuutus line: 89", true, loydetyt.get(1) == koti12); 
    loydetyt = vak.annaKotivakuutus(as2); 
    assertEquals("From: Vakuutus line: 91", 3, loydetyt.size()); 
  } // Generated by ComTest END
}